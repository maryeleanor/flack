notes

I changed my Procfile
to this :
web: gunicorn --worker-class eventlet -w 1 application:app
and then I used the command: heroku ps:scale web=1 

web: gunicorn --worker-class eventlet -w 1 
web: gunicorn -k eventlet application:app
web: gunicorn --worker-class socketio.sgunicorn.GeventSocketIOWorker --log-file=- server:app





    // // keep submit button disabled unless there's text in input
    // document.querySelector('#submit').disabled = true;
    // document.querySelector('#input').onkeyup = () => {
    //     if (document.querySelector('#input').value.length > 0)
    //         document.querySelector('#submit').disabled = false;
    //     else
    //         document.querySelector('#submit').disabled = true;
    // };

    // //connect to websocket
    // let socket = io.connect(location.protocol + '//' + document.domain + ':' + location.port);


    // when form submitted
    // document.querySelector('#form').onsubmit = () => {

    //     const request = new XMLHttpRequest();
    //     const input = document.querySelector('#input').value;
    //     request.open('POST', '/chat');

    //     request.onload = () => {
    //         const data = JSON.parse(request.responseText);

    //         if (data.success) {
    //             const contents = `<p> ${data.chats} </p>`
    //             document.querySelector('#result').innerHTML = contents;
    //             document.querySelector('#input').value = "";
    //         }
    //         else {
    //             document.querySelector('#result').innerHTML = 'There was an error.';
    //         }
    //     }

    //     const data = new FormData();
    //     data.append('input', input);

    //     request.send(data); 
    //     return false;

    // }




 if request.method == "POST":
        if request.files:
            
            # print(request.cookies)

            image = request.files['image']

            ext = allowed_img(image.filename)
            if not ext:
                print("Filetype not allowed")
                error = "Filetype not allowed"
                return render_template("account.html", username=username, error=error)

            filename = secure_filename(session['username'] + '-img.' + ext)

            image.save(os.path.join(app.config["IMAGE_UPLOADS"], filename))

            print(image)
            success = "successfully uploaded"
            return render_template("account.html", username=username, success=sucess)
